Required imports
::

    >>> import yafowil.standard
    >>> import yafowil.compound
    >>> from yafowil.base import factory
    >>> from yafowil.controller import Controller

Create a widget tree
::

    >>> class Context(object):
    ...     value = 'hello world'    
    
    >>> context = Context()
    
    >>> def getter(request):
    ...     return request.context.value
    
    >>> form = factory(u'compound', name='testform')
    >>> form['field1'] = factory('text',
    ...                          value_or_getter=getter)
    >>> form['field2'] = factory('text',
    ...                          value_or_getter=getter)
    
    >>> def handler(request, data):
    ...     print data
    
    >>> props = {
    ...     'action': 'save',
    ...     'expression': True,
    ...     'handler': handler,
    ...     'next': None, # callable, its result is returned by Controller.__call__
    ...     'label': 'Save',
    ... }
    
    >>> form['save'] = factory('submit', properties=props)
    >>> form.printtree()
    <class 'yafowil.base.Widget'>: testform
      <class 'yafowil.base.Widget'>: field1
      <class 'yafowil.base.Widget'>: field2
      <class 'yafowil.base.Widget'>: save
    
    >>> class Request(dict):
    ...     context = context
    
    >>> request = Request()
    >>> request['action.testform.save'] = '1'
    
    >>> form(request)
    u'<input id="input-testform-field1" name="testform.field1" type="text" value="hello world" /><input id="input-testform-field2" name="testform.field2" type="text" value="hello world" /><input class="" id="input-testform-save" name="action.testform.save" type="submit" value="Save" />'
    
    >>> #controller = Controller(form)
    
    >>> #controller(request)