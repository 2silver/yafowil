Preparation
===========

    >>> import yafowil.standard
    >>> from yafowil.base import factory, RuntimeData
    
Test Rendering of Compound
==========================

    >>> import yafowil.compound
    >>> compound = factory('compound', 
    ...                    'COMPOUND', 
    ...                    {'inner': 'somevalue', 
    ...                     'inner2': 'othervalue'})
    >>> compound['inner'] = factory('text', 'inner', 'value1')
    >>> compound['inner2'] = factory('text', 'inner2', 'value2')
    >>> compound()
    u'<input id="input-COMPOUND-inner" name="COMPOUND.inner" type="text" 
    value="value1" /><input id="input-COMPOUND-inner2" name="COMPOUND.inner2" 
    type="text" value="value2" />'
    
Same with delegation switched on:

    >>> compound = factory('compound', 
    ...                    'COMPOUND', 
    ...                    {'inner': 'somevalue', 
    ...                     'inner2': 'othervalue'},
    ...                    {'delegation': True})
    >>> compound['inner'] = factory('text', 'inner', 'value')
    >>> compound['inner2'] = factory('text', 'inner2', 'value2')
    >>> compound()
    u'<input id="input-COMPOUND-inner" name="COMPOUND.inner" type="text" 
    value="somevalue" /><input id="input-COMPOUND-inner2" name="COMPOUND.inner2" 
    type="text" value="othervalue" />'

Test Extraction of Widget
=========================

    >>> compound.extract({'COMPOUND.inner': 'newvalue'})
    {'errors': [], 'extracted': [{'inner2': {'errors': [], 
    'extracted': [<UNSET>, <UNSET>], 'input_field_type': 'text', 'rendered': [], 
    'request': {'COMPOUND.inner': 'newvalue'}, 'value': 'othervalue'}, 
    'inner': {'errors': [], 'extracted': ['newvalue', 'newvalue'], 
    'input_field_type': 'text', 'rendered': [], 'request': {'COMPOUND.inner': 'newvalue'}, 
    'value': 'somevalue'}}], 'rendered': [], 'request': {'COMPOUND.inner': 'newvalue'}, 
    'value': {'inner2': 'othervalue', 'inner': 'somevalue'}}

Test Fieldset
=============
::

    >>> compound = factory('fieldset', 
    ...                    'COMPOUND', {'inner': 'somevalue', 
    ...                                 'inner2': 'othervalue'})
    >>> compound['inner'] = factory('text', 'inner', 'value')
    >>> compound['inner2'] = factory('text', 'inner2', 'value2')
    >>> compound()
    u'<fieldset id="fieldset-COMPOUND"><input id="input-COMPOUND-inner" 
    name="COMPOUND.inner" type="text" value="value" /><input 
    id="input-COMPOUND-inner2" name="COMPOUND.inner2" type="text" 
    value="value2" /></fieldset>'
    